{"version":3,"sources":["Backend/BackendConnect.js","Types/type.js","Actions/categoryActions.js","Actions/postActions.js","Actions/authActions.js","Hook/useForm.js","Components/auth/LoginScreen.js","Components/auth/RegisterScreen.js","Helpers/capitalLetter.js","Components/ui/Categories.js","Components/ui/Post.js","Components/ui/Category.js","Components/ui/SideBar.js","Components/home/HomeScreen.js","Components/ui/NavBar.js","Actions/cleanAction.js","Router/PrivateRoute.js","Router/PublicRoute.js","Router/RouterAPP.js","Reducers/authReducer.js","Reducers/postReducer.js","Reducers/rootReducer.js","Store/store.js","Store/saveLoadState.js","APP/PostmeAPP.js","index.js"],"names":["baseUrl","process","BackendConnect","endpoint","data","method","url","fetch","headers","body","JSON","stringify","types","startLoadCategories","dispatch","a","request","json","response","ok","loadCategories","categories","console","log","alert","type","payload","startLoadPosts","loadPost","posts","msg","setCategory","category","loginAction","user","starRegisterLike","postsLiked","uid","userLogged","useForm","initialValues","useState","formValues","setformValues","handleInputChange","target","name","value","reset","LoginScreen","email","password","useDispatch","className","onSubmit","event","preventDefault","errors","autoComplete","onChange","to","RegisterScreen","history","useHistory","password2","onClick","evento","push","aria-hidden","CapitalLetter","string","toLowerCase","charAt","toUpperCase","slice","Categories","useSelector","state","post","activeCategory","document","style","backgroundColor","color","map","handleChangeCategory","icon","penguinIcon","categoryTitle","_id","Post","auth","handleUpdateLike","postId","like","likePost","find","id","newPostsLiked","handleColorLike","handleDeletePost","purgePostsLiked","filter","startDeletePost","categoryPost","disabled","defaultValue","titlePost","bodyPost","Category","date","Date","initFormValues","datePost","getDate","getMonth","getFullYear","placeholder","SideBar","handleBack","handleDeleteCategory","categoryId","postsDeleted","postsDeletedId","getElementById","click","data-bs-toggle","data-bs-target","tabIndex","aria-labelledby","data-bs-dismiss","aria-label","HomeScreen","NavBar","alt","src","localStorage","clear","PrivateRoute","isLoggedIn","Component","component","rest","props","protoType","PropTypes","bool","isRequired","func","PublicRoute","RouterAPP","logged","useEffect","exact","path","initialState","rootReducer","combineReducers","action","initialData","parse","getItem","loadState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","subscribe","setItem","saveState","getState","PostmeAPP","divRoot","ReactDOM","render"],"mappings":"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","file":"static/js/main.aa573b59.chunk.js","sourcesContent":["\r\n//---------\\\\ SERVER URL //---------\\\\ \r\n\r\nconst baseUrl = process.env.REACT_APP_API_BASE_URL;\r\n\r\n//----------------------------------\\\\ \r\n\r\n\r\nconst BackendConnect = ( endpoint, data = {}, method = \"GET\" ) =>\r\n{\r\n    \r\n    const url = `${ baseUrl }/${ endpoint }`; //localhost:4030/api/auth/\r\n\r\n    //console.log( url );\r\n\r\n    if( method === \"GET\" )\r\n    {\r\n        return fetch( url );\r\n    }\r\n    else\r\n    {\r\n        return fetch( \r\n            \r\n            url, \r\n            { \r\n                method, \r\n                headers : { \"Content-type\" : \"application/json\" },\r\n                body : JSON.stringify( data )\r\n            } \r\n        );\r\n    };\r\n\r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport { BackendConnect };","\r\nconst types =\r\n{\r\n    authLogin : \"[AUTH] Login\",\r\n    authRegister : \"[AUTH] Register\",\r\n    authLogout : \"[AUTH] Logout\",\r\n\r\n    postLoad : \"[POST] Load post\",\r\n    postSetActiveCategory : \"[POST] Set active category\",\r\n    postLoadCategories : \"[POST] Load categories\",\r\n \r\n    clean : \"[CLEAN] Clean all states\"\r\n    \r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport { types };","import { BackendConnect } from \"../Backend/BackendConnect\";\r\nimport { types } from \"../Types/type\";\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst startLoadCategories = () =>\r\n{\r\n    return async ( dispatch ) =>\r\n    {\r\n\r\n        try \r\n        {\r\n\r\n            const request = await BackendConnect( \"category\" );\r\n\r\n            const response = await request.json();\r\n\r\n            if( response.ok )\r\n            {\r\n                dispatch( loadCategories( response.categories ) );\r\n            }\r\n            else\r\n            {\r\n                dispatch( loadCategories( [] ) );\r\n            };\r\n\r\n        } \r\n        catch( error ) \r\n        {\r\n            console.log( error )\r\n            return alert( \"Something went wrong\" );  \r\n        };\r\n\r\n    };\r\n};\r\n\r\nconst loadCategories = ( categories ) => ( { type : types.postLoadCategories, payload : categories } );\r\n\r\nconst startCreateCategory = ( category ) =>\r\n{\r\n  \r\n    return async( dispatch ) =>\r\n    {\r\n        try \r\n        {\r\n            const request = await BackendConnect( \"category\", category, \"POST\" );\r\n\r\n            const response = await request.json();\r\n\r\n            if( response.ok )\r\n            {\r\n                dispatch( startLoadCategories() );\r\n            }\r\n            else\r\n            {\r\n                if( !response.errors )\r\n                {\r\n                    alert( response.msg );\r\n                };\r\n\r\n                if( response.errors.categoryTitle )\r\n                {\r\n                    alert( response.errors.categoryTitle.msg );\r\n                };\r\n                \r\n            }\r\n        } \r\n        catch( error )  \r\n        {\r\n            console.log( error )\r\n            return alert( \"Something went wrong\" );  \r\n        };\r\n        \r\n    };\r\n};\r\n\r\nconst startDeleteCategory = ( categoryId ) =>\r\n{\r\n    return async ( dispatch ) =>\r\n    {\r\n        try \r\n        {\r\n            \r\n            const request = await BackendConnect( \"category\", { categoryId }, \"DELETE\" );\r\n\r\n            const response = await request.json();\r\n            \r\n            if( response.ok )\r\n            {\r\n                dispatch( startLoadCategories() );\r\n            };\r\n        } \r\n        catch( error ) \r\n        {\r\n            console.log( error )\r\n            return alert( \"Something went wrong\" ); \r\n        };\r\n    };\r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport { startLoadCategories, startCreateCategory, startDeleteCategory };","import { BackendConnect } from \"../Backend/BackendConnect\";\r\nimport { types } from \"../Types/type\";\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst startRegisterPost = ( post ) =>\r\n{\r\n    return async ( dispatch ) =>\r\n    {\r\n        try \r\n        {\r\n            const request = await BackendConnect( \"post\", post, \"POST\" );\r\n\r\n            const response = await request.json();\r\n            \r\n            if( response.ok )\r\n            {\r\n                dispatch( startLoadPosts() );  \r\n            }\r\n            else\r\n            {\r\n                if( !response.errors )\r\n                {\r\n                    return alert( response.msg );\r\n                };\r\n\r\n                if( response.errors.titlePost )\r\n                {\r\n                    alert( response.errors.titlePost.msg );\r\n                };\r\n\r\n                if( response.errors.bodyPost )\r\n                {\r\n                    return alert( response.errors.bodyPost.msg );\r\n                };\r\n            };\r\n        } \r\n        catch( error ) \r\n        {\r\n            console.log( error )\r\n            return alert( \"Something went wrong\" );\r\n        };\r\n    };\r\n};\r\n\r\nconst startLoadPosts = () =>\r\n{\r\n    return async ( dispatch ) =>\r\n    {\r\n        try \r\n        {\r\n            const request = await BackendConnect( \"post\" ); \r\n            \r\n            const response = await request.json();\r\n\r\n            if( response.ok )\r\n            {\r\n                dispatch( loadPost( response.posts ) );\r\n            }\r\n            else\r\n            {\r\n                alert( response.msg )\r\n            };\r\n        } \r\n        catch( error ) \r\n        {\r\n            console.log( error )\r\n            return alert( \"Something went wrong\" );\r\n        };\r\n    };\r\n};\r\n\r\nconst loadPost = ( posts ) => ( { type : types.postLoad, payload : posts } );\r\n\r\n\r\nconst startUpdateLike = ( likePost, _id ) =>\r\n{\r\n    return async ( dispatch ) =>\r\n    {\r\n        try \r\n        {\r\n            const request = await BackendConnect( \"post\", { likePost, _id }, \"PUT\" );\r\n\r\n            const response = await request.json();\r\n\r\n            if( response.ok )\r\n            {\r\n                dispatch( startLoadPosts() );\r\n            };\r\n        } \r\n        catch( error ) \r\n        {\r\n            console.log( error )\r\n            return alert( \"Something went wrong\" );\r\n        };\r\n    };\r\n};\r\n\r\nconst startDeletePost = ( postId ) =>\r\n{\r\n    return async ( dispatch ) =>\r\n    {\r\n        try \r\n        {\r\n\r\n            const request = await BackendConnect( `post/${ postId }`, {}, \"DELETE\" );\r\n\r\n            const response = await request.json();\r\n\r\n            if( response.ok )\r\n            {\r\n                dispatch( startLoadPosts() );\r\n            }\r\n            else\r\n            {\r\n                alert( response.msg );\r\n            };\r\n            \r\n        } \r\n        catch( error ) \r\n        {\r\n            console.log( error )\r\n            return alert( \"Something went wrong\" );\r\n        };\r\n    };\r\n};\r\n\r\nconst setCategory = ( category ) => ( { type : types.postSetActiveCategory, payload : category } );\r\n\r\n\r\nconst startDeletePosts = ( categoryPost ) =>\r\n{\r\n    return async ( dispatch ) =>\r\n    {\r\n        try \r\n        {\r\n\r\n            const request = await BackendConnect( \"post/delposts\", { categoryPost }, \"DELETE\" );\r\n\r\n            const response = await request.json();\r\n\r\n            if( response.ok )\r\n            {\r\n                dispatch( startLoadPosts() );\r\n            };\r\n               \r\n        } \r\n        catch( error ) \r\n        {\r\n            console.log( error )\r\n            return alert( \"Something went wrong\" );\r\n        };\r\n    };\r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport { \r\n    \r\n    startRegisterPost, \r\n    startLoadPosts, \r\n    startDeletePost, \r\n    startUpdateLike,\r\n    setCategory,\r\n    startDeletePosts\r\n    \r\n};","import { BackendConnect } from \"../Backend/BackendConnect\";\r\nimport { types } from \"../Types/type\";\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst startRegisterAction = ( user ) =>\r\n{\r\n    return async () =>\r\n    {\r\n        try \r\n        {\r\n            const request = await BackendConnect( \"auth/register\", user, \"POST\" );\r\n\r\n            const response = await request.json();\r\n\r\n            if( response.ok )\r\n            {\r\n                return alert( response.msg );\r\n            }\r\n            else\r\n            {\r\n                if( !response.errors )\r\n                {\r\n                    return alert( response.msg );\r\n                };\r\n\r\n                if( response.errors.password )\r\n                {\r\n                    alert( response.errors.password.msg );\r\n                };\r\n\r\n                if( response.errors.email )\r\n                {\r\n                    return alert( response.errors.email.msg );\r\n                };\r\n\r\n                if( response.errors.name )\r\n                {\r\n                    return alert( response.errors.name.msg );\r\n                };\r\n            };\r\n\r\n        } \r\n        catch( error ) \r\n        {\r\n            console.log( error )\r\n            return alert( \"Something went wrong\" );\r\n        };\r\n    };\r\n};\r\n\r\n\r\nconst startLoginAction = ( user ) =>\r\n{\r\n    return async ( dispatch ) =>\r\n    {\r\n\r\n        try \r\n        {\r\n           const request =  await BackendConnect( \"auth\", user, \"POST\" );//-->\r\n\r\n           const response = await request.json();//<---\r\n\r\n           if( response.ok )\r\n           {\r\n                dispatch( loginAction( response.userLogged ) );\r\n           }\r\n           else\r\n           {\r\n                if( !response.errors )\r\n                {\r\n                    return alert( response.msg );\r\n                };\r\n\r\n                if( response.errors.password )\r\n                {\r\n                    alert( response.errors.password.msg );\r\n                };\r\n\r\n                if( response.errors.email )\r\n                {\r\n                    return alert( response.errors.email.msg );\r\n                };\r\n\r\n           };\r\n        } \r\n        catch( error ) \r\n        {\r\n            console.log( error )\r\n            return alert( \"Something went wrong\" );\r\n        };\r\n\r\n    };\r\n};\r\n\r\nconst loginAction = ( user ) => ( { type : types.authLogin, payload : user } );\r\n\r\n\r\nconst starRegisterLike = ( postsLiked, uid ) =>\r\n{\r\n    return async ( dispatch ) =>\r\n    {\r\n        try \r\n        {\r\n            const request = await BackendConnect( \"auth\", { postsLiked, uid }, \"PUT\" );\r\n\r\n            const response = await request.json();\r\n\r\n            dispatch( loginAction( response.userLogged ) );\r\n\r\n        } \r\n        catch( error ) \r\n        {\r\n            console.log( error )\r\n            return alert( \"Something went wrong\" );   \r\n        };\r\n    };\r\n}\r\n\r\n\r\nconst logoutAction = () => ( { type : types.authLogout } );\r\n\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport \r\n{ \r\n    startRegisterAction, \r\n    startLoginAction, \r\n    logoutAction, \r\n    starRegisterLike\r\n};","import { useState } from \"react\";\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst useForm = ( initialValues = {} ) =>\r\n{\r\n\r\n    const [ formValues, setformValues ] = useState( initialValues );\r\n\r\n    const handleInputChange = ( { target } ) =>\r\n    {\r\n        setformValues( { ...formValues, [ target.name ] : target.value } );\r\n    };\r\n\r\n    const reset = () => setformValues( initialValues );\r\n\r\n    return [ formValues, handleInputChange, reset ];\r\n\r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport { useForm };","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { startLoginAction } from '../../Actions/authActions';\r\nimport { useForm } from '../../Hook/useForm';\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst LoginScreen = () => \r\n{\r\n\r\n\r\n////////////////////// BTN LOGIN //////////////////////\r\n\r\nconst initFormValue = \r\n{\r\n    email : \"test@gmail.com\",\r\n    password : \"123456\"\r\n};\r\n\r\nconst [ formValues, handleInputChange ] = useForm( initFormValue );\r\n\r\nconst { email, password } = formValues;\r\n\r\nconst dispatch = useDispatch(); \r\n\r\nconst handleLogin = ( event ) =>\r\n{\r\n    event.preventDefault();\r\n\r\n    dispatch( startLoginAction( formValues ) );\r\n};\r\n\r\n//////////////////////////////////////////////////////\r\n\r\n/******************************************************************************************************* */\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"row\">\r\n\r\n            <div className=\"col-md-12\">\r\n\r\n\r\n                <div className=\"LoginBox\">\r\n\r\n                    <form onSubmit={ handleLogin }>\r\n\r\n                        <div className=\"form-group mt-3\">\r\n\r\n                            <label>Email</label>\r\n                            <input type=\"email\" className=\"form-control\" name=\"email\" autoComplete=\"off\" value={ email } onChange={ handleInputChange } />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"form-group mt-3\">\r\n\r\n                            <label>Password</label>\r\n                            <input type=\"password\" className=\"form-control\" name=\"password\" value={ password } onChange={ handleInputChange } />\r\n                            \r\n                        </div>\r\n\r\n                        <div className=\"form-group mt-4\">\r\n\r\n                            <button className=\"btn btn-outline-primary form-control\"> Login </button>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"textRegisterBox\">\r\n\r\n                            <Link to=\"/register\" className=\"registerLink\">Register</Link>\r\n\r\n                        </div>\r\n\r\n                    </form>\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport default LoginScreen;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { startRegisterAction } from '../../Actions/authActions';\r\nimport { useForm } from '../../Hook/useForm';\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst RegisterScreen = () => \r\n{\r\n\r\n////////////////////// BTN BACK //////////////////////\r\n\r\n    const history = useHistory();\r\n\r\n    const handleBack = ( evento ) =>\r\n    {\r\n        evento.preventDefault();\r\n\r\n        history.push( \"/login\" );\r\n    }; \r\n\r\n///////////////////////////////////////////////////////\r\n\r\n\r\n\r\n////////////////////// BTN REGISTER //////////////////////\r\n\r\nconst initiValues = \r\n{\r\n    name : \"Test\",\r\n    email : \"test@gmail.com\",\r\n    password : \"123456\",\r\n    password2 : \"123456\",\r\n    postsLiked : []\r\n};\r\n\r\nconst [ formValues, handleInputChange, reset ] =  useForm( initiValues ) ;\r\n\r\nconst { name, email, password, password2 } = formValues;\r\n\r\nconst dispatch = useDispatch();\r\n\r\nconst handleRegister = ( event ) =>\r\n{\r\n    event.preventDefault();\r\n\r\n    if( formValues.password !== formValues.password2 )\r\n    {\r\n        return alert( \"Passwords must not be the same\" );\r\n    };\r\n\r\n    dispatch( startRegisterAction( formValues ) );\r\n\r\n    reset();\r\n\r\n};\r\n\r\n/////////////////////////////////////////////////////////////\r\n\r\n//*********************************************************************************************** */\r\n\r\n    return (\r\n\r\n        <div className=\"row\">\r\n\r\n            <div className=\"col-md-12\">\r\n\r\n\r\n                <div className=\"RegisterBox\">\r\n\r\n                    <form>\r\n\r\n                        <div className=\"form-group mt-3\">\r\n\r\n                            <label>Name</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"name\" autoComplete=\"off\" value={ name } onChange={ handleInputChange } />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"form-group mt-3\">\r\n\r\n                            <label>Email</label>\r\n                            <input type=\"email\" className=\"form-control\" name=\"email\" autoComplete=\"off\" value={ email } onChange={ handleInputChange } />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"form-group mt-3\">\r\n\r\n                            <label>Password</label>\r\n                            <input type=\"password\" className=\"form-control\" name=\"password\" value={ password } onChange={ handleInputChange } />\r\n                            \r\n                        </div>\r\n\r\n                        <div className=\"form-group mt-3\">\r\n\r\n                            <label>Confirm password</label>\r\n                            <input type=\"password\" className=\"form-control\" name=\"password2\" value={ password2 } onChange={ handleInputChange } />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"form-group mt-4\">\r\n\r\n                            <button onClick={ handleRegister } className=\"btn btn-outline-primary form-control\"> Register </button>\r\n                            \r\n                        </div>\r\n\r\n                        <div className=\"form-group mt-4\">\r\n\r\n                            <button  onClick={ handleBack } className=\"btn btn-outline-primary form-control\"><i className=\"fa fa-arrow-left\" aria-hidden=\"true\"></i></button>\r\n                            \r\n                        </div>\r\n\r\n                    </form>\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport default RegisterScreen\r\n","\r\n\r\nconst CapitalLetter = ( string = \"\" ) =>\r\n{\r\n    string.toLowerCase();\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport { CapitalLetter };\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setCategory } from '../../Actions/postActions';\r\nimport { Icon } from '@iconify/react';\r\nimport penguinIcon from '@iconify-icons/mdi/penguin';\r\nimport { CapitalLetter } from '../../Helpers/capitalLetter';\r\n\r\n\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst Categories = () => \r\n{\r\n\r\n    const { categories,activeCategory } = useSelector( state => state.post );\r\n\r\n    document.body.style.backgroundColor = activeCategory.color;\r\n\r\n\r\n////////////////////// BTN CATEGORY //////////////////////\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChangeCategory = ( category ) =>\r\n    {\r\n        dispatch( setCategory( category ) );\r\n    };\r\n\r\n\r\n//////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n/************************************************************************************************************* */\r\n\r\n    return (\r\n\r\n        <div className=\"col-md-10\">\r\n\r\n            <div className=\"container mt-4\">\r\n\r\n                <div className=\"row\">\r\n\r\n                    {\r\n                \r\n                        categories.map( ( category ) => {  \r\n\r\n\r\n                            return  <div key={ category._id } className=\"col-md-3\">\r\n                                \r\n                                        <div className=\"card cardCategory mb-3\" >\r\n\r\n                                            <div className=\"card-body bodyCategory\">\r\n                                                   \r\n                                                <div className=\"row\">\r\n\r\n                                                    <div className=\"col-md-2 categoryColor\">\r\n\r\n                                                        <div className=\"contPin\" style={ { backgroundColor : category.color } }>\r\n                                                            <Icon onClick={ ()=>{ handleChangeCategory( category ) } } icon={penguinIcon} />\r\n                                                        </div>\r\n                                                        \r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-md-10 categoryTitle\">\r\n\r\n                                                        { CapitalLetter( category.categoryTitle ) }\r\n                                                        \r\n                                                    </div>\r\n\r\n\r\n                                                </div>\r\n                                              \r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                        } )\r\n                    }\r\n                        \r\n                </div>\r\n\r\n               \r\n\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport default Categories;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { starRegisterLike } from '../../Actions/authActions';\r\nimport { startDeletePost, startUpdateLike  } from '../../Actions/postActions';\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst Post = () => \r\n{\r\n\r\n////////////////////// LIKE /////////////////////////\r\n\r\n\r\n    let { posts, activeCategory } = useSelector( state => state.post );\r\n\r\n    const { uid, postsLiked } = useSelector( state => state.auth );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleUpdateLike = ( postId, like ) =>\r\n    {\r\n\r\n        const result = postsLiked.find( ( id ) => id === postId );\r\n     \r\n\r\n        if( !result )\r\n        {\r\n\r\n            //---------\\\\ UPDATE LIKED USER //---------\\\\ \r\n\r\n            const newPostsLiked = [ ...postsLiked, postId ];\r\n       \r\n            dispatch( starRegisterLike( newPostsLiked, uid ) );\r\n\r\n            //-------------------------------------\\\\\r\n\r\n\r\n            //---------\\\\ UPDATE LIKE POST //---------\\\\ \r\n\r\n            const newLike = like + 1;\r\n\r\n            dispatch( startUpdateLike( newLike, postId ) );\r\n\r\n            //-------------------------------------\\\\ \r\n\r\n        };\r\n\r\n    };\r\n\r\n    const handleColorLike = ( postId ) =>\r\n    {\r\n        const result = postsLiked.find( ( id ) => id === postId ); \r\n\r\n        if( result )\r\n        {\r\n            return \"text-danger\";\r\n        };\r\n\r\n    };\r\n\r\n////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n////////////////////// BTN DELETE /////////////////////////\r\n\r\n    \r\n    const handleDeletePost = ( postId ) =>\r\n    {\r\n        \r\n        let purgePostsLiked = [];\r\n\r\n        purgePostsLiked = \r\n        [ ...postsLiked.filter( ( id ) => id !== postId  ) ];\r\n     \r\n        dispatch( starRegisterLike( purgePostsLiked, uid ) );\r\n\r\n        dispatch( startDeletePost( postId ) );\r\n           \r\n    };\r\n\r\n////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n////////////////////// FILTRO /////////////////////////\r\n\r\n    posts = [ ...posts.filter( ( post ) => \r\n    post.categoryPost === activeCategory.categoryTitle ) ];\r\n\r\n////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n/************************************************************************************************** */\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n        { \r\n            posts.map( ( post ) => {\r\n\r\n                return <div key={ post._id } className=\"col-md-3 postBox\">\r\n\r\n                    <div className=\"card cardPost\">\r\n\r\n                        <div className=\"card-body no_selection \">\r\n\r\n                            <input disabled={ true } type=\"text\" className=\"inputDisabled form-control text-center\" name=\"titlePost\" defaultValue={ post.titlePost } autoComplete=\"off\" />\r\n                            <textarea disabled={ true } className=\"inputDisabled form-control mt-2 text-center\" name=\"bodyPost\" defaultValue={ post.bodyPost } autoComplete=\"off\" ></textarea>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"card-footer\" style={ { backgroundColor : activeCategory.color  } }>\r\n\r\n                            <div className=\"row\">\r\n\r\n                                 \r\n                                <div className=\"col-md-8 btnAling\">\r\n                                { \r\n                                    post.user._id === uid && \r\n                                    <button onClick={ () => { handleDeletePost( post._id ) } } className=\"btn btn-dark btnDeletePost form-control\" ><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\r\n                                }\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4 text-center\">\r\n\r\n                                    <span onClick={ () => { handleUpdateLike( post._id, post.likePost ) } } className={`like form-control ${ handleColorLike( post._id ) }`}>{ `♥ ${ post.likePost }` }</span>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n\r\n            } ) \r\n        }\r\n\r\n        </>\r\n\r\n\r\n    );\r\n\r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startRegisterPost } from '../../Actions/postActions';\r\nimport { useForm } from '../../Hook/useForm';\r\nimport Post from '../ui/Post';\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst Category = () => \r\n{\r\n\r\n\r\n////////////////////// REGISTER POST //////////////////////\r\n\r\n    const { uid } = useSelector( state => state.auth );\r\n\r\n    const { activeCategory } = useSelector( state => state.post );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const date = new Date();\r\n\r\n    const initFormValues = \r\n    {\r\n        titlePost : \"\",\r\n        bodyPost : \"\",\r\n        likePost : 0,\r\n        datePost : date.getDate() + \"/\" + ( date.getMonth() + 1 ) + \"/\" + date.getFullYear(),\r\n        categoryPost : activeCategory.categoryTitle,\r\n        user : uid\r\n    };\r\n\r\n    const [ formValues, handleInputChange, reset ] = useForm( initFormValues );\r\n\r\n    const { titlePost, bodyPost } = formValues;\r\n\r\n    const handlePost = ( event ) =>\r\n    {\r\n\r\n        event.preventDefault();\r\n\r\n        dispatch( startRegisterPost( formValues ) );\r\n\r\n        reset();\r\n\r\n    };\r\n\r\n///////////////////////////////////////////////////\r\n\r\n\r\n/*************************************************************************************************** */\r\n    \r\n    return (\r\n\r\n        <div className=\"col-md-10\">\r\n\r\n            <div className=\"container mt-4\">\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-12 cardBox\">\r\n\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"card-body\" >\r\n\r\n                                <form onSubmit={ handlePost }>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <input className=\"form-control\" type=\"text\" name=\"titlePost\" placeholder=\"Title\" autoComplete=\"off\" value={ titlePost } onChange={ handleInputChange }  />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mt-2\">\r\n                                        <textarea className=\"form-control\" name=\"bodyPost\" placeholder=\"What are you thinking about?\" value={ bodyPost } onChange={ handleInputChange }  ></textarea>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mt-2\">\r\n                                        <button className=\"btn btnLogout form-control\">Post</button>\r\n                                    </div>\r\n\r\n                                </form>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <hr/>\r\n\r\n                \r\n                <div className=\"row mt-2\">\r\n\r\n                    <Post/>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport default Category;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startCreateCategory, startDeleteCategory } from '../../Actions/categoryActions';\r\nimport { setCategory, startDeletePosts } from '../../Actions/postActions';\r\nimport { CapitalLetter } from '../../Helpers/capitalLetter';\r\nimport { useForm } from '../../Hook/useForm';\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst SideBar = () => \r\n{\r\n\r\n////////////////////// BTN BACK //////////////////////\r\n\r\n    const { activeCategory } = useSelector( state => state.post );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleBack = () =>\r\n    {\r\n        dispatch( setCategory( { color : \"\", categoryTitle:\"\" } ) );\r\n    };\r\n\r\n/////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n////////////////////// BTN CREATE CATEGORY //////////////////////\r\n\r\n    const { uid } = useSelector( state => state.auth );\r\n\r\n    const initialFormValues =\r\n    {\r\n        categoryTitle : \"\",\r\n        color :  \"#fa9031\",\r\n        user : uid\r\n    };\r\n\r\n    const [ formValues, handleInputChange, reset ] = useForm( initialFormValues );\r\n\r\n    const { categoryTitle, color } = formValues;\r\n    \r\n    const handleCreateCategory = ( event ) =>\r\n    {\r\n        event.preventDefault();\r\n\r\n        dispatch( startCreateCategory( formValues ) );\r\n\r\n        reset();\r\n\r\n        document.getElementById( \"close\" ).click();\r\n\r\n        \r\n    };\r\n\r\n//////////////////////////////////////////////////////////\r\n\r\n\r\n/////////////////////////// BTN DELETE CATEGORY /////////////////////////////\r\n\r\nconst { posts } = useSelector( state => state.post );\r\n\r\nconst handleDeleteCategory = () =>\r\n{\r\n    const postsDeleted = [ ...posts.filter( ( post ) => activeCategory.categoryTitle === post.categoryPost ) ];\r\n    \r\n    const postsDeletedId = [ ...postsDeleted.map( ( post ) => post._id ) ];\r\n\r\n    console.log(postsDeletedId);\r\n\r\n    dispatch( startDeleteCategory( activeCategory.categoryId ) );\r\n\r\n    dispatch( startDeletePosts( activeCategory.categoryTitle  ) );\r\n\r\n    document.getElementById( \"closeConfirm\" ).click();\r\n\r\n};\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n/*********************************************************************************************************** */\r\n\r\n    \r\n    return (\r\n\r\n        <>\r\n            <div className=\"col-md-2 sideBar\">\r\n\r\n                { activeCategory.categoryTitle === \"\" ? \r\n\r\n                    <i className=\"fa fa-plus-circle mt-5 pointerAddCategory\" data-bs-toggle=\"modal\" data-bs-target=\"#modalCategory\" aria-hidden=\"true\">\r\n                        <p className=\"textAdd\">Add category</p>\r\n                    </i>\r\n\r\n\r\n                  \r\n                    :\r\n                    <>\r\n                        <input defaultValue={ CapitalLetter( activeCategory.categoryTitle ) } className=\"sideCatego form-control text-center categoryName\" disabled={ true } style={ { backgroundColor : activeCategory.color } }/>\r\n                        {\r\n                            uid === activeCategory.user._id &&\r\n                            <button className=\"sideButton form-control mt-3\" data-bs-toggle=\"modal\" data-bs-target=\"#modalConfirm\"><i className=\"iSide fa fa-trash\" style={ { color:\"#fa9031\" } } aria-hidden=\"true\"></i></button> \r\n                        }\r\n                        <button className=\"sideButton form-control mt-3\" onClick={ handleBack }><i className=\"iSide fa fa-arrow-left\" style={ { color:\"#fa9031\" } } aria-hidden=\"true\"></i></button>\r\n                    </>\r\n\r\n                }\r\n                \r\n            </div>\r\n\r\n            {/*Modal CREAT CATEGO*/}\r\n            <div className=\"modal fade\" id=\"modalCategory\" tabIndex=\"-1\" aria-labelledby=\"modalCategoryLabel\" aria-hidden=\"true\">\r\n                \r\n                <div className=\"modal-dialog modal-dialog-centered\">\r\n\r\n                    <div className=\"modal-content\">\r\n\r\n                        <div className=\"modal-header\">\r\n\r\n                            <button type=\"button\" id=\"close\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n\r\n                        </div>\r\n\r\n                        <form onSubmit={ handleCreateCategory }>\r\n\r\n                            <div className=\"modal-body\">\r\n                                \r\n                                    <div className=\"form-group\">\r\n                                        <label><small className=\"text-muted\">Category title</small></label>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"categoryTitle\" autoComplete=\"off\" value={ categoryTitle } onChange={ handleInputChange }/>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label><small className=\"text-muted\">Category Color</small></label>\r\n                                        <input type=\"color\" className=\"form-control colorInp\" name=\"color\" value={ color } onChange={ handleInputChange }/>\r\n                                    </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"submit\" className=\"btn btn-dark form-control\"><i className=\"fa fa-comments\" aria-hidden=\"true\"></i>\r\n</button>\r\n                            </div>\r\n\r\n\r\n                        </form>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            \r\n\r\n            {/*Modal Delete Catego*/}\r\n            <div className=\"modal fade\" id=\"modalConfirm\" tabIndex=\"-1\" aria-labelledby=\"modalConfirmLabel\" aria-hidden=\"true\">\r\n                \r\n                <div className=\"modal-dialog modal-dialog-centered\">\r\n                    \r\n                    <div className=\"modal-content\">\r\n                        \r\n                        <div className=\"modal-header\">\r\n                            <button type=\"button\" id=\"closeConfirm\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        </div>\r\n                        \r\n                        <div className=\"modal-body text-center\">\r\n                            Are you sure about delete this category?\r\n                        </div>\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <button onClick={ ()=>{ handleBack(); handleDeleteCategory(); } } type=\"button\" className=\"btn btnLogout\">Yes</button>\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">No</button>   \r\n                        </div>\r\n                    \r\n                    </div>\r\n                \r\n                </div>\r\n            \r\n            </div>\r\n\r\n        </>\r\n\r\n    );\r\n\r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\n\r\nexport default SideBar;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Categories from '../ui/Categories';\r\nimport Category from '../ui/Category';\r\nimport SideBar from '../ui/SideBar';\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst HomeScreen = () => \r\n{\r\n\r\n    const { activeCategory } = useSelector( state => state.post );\r\n\r\n    const { categoryTitle } = activeCategory;\r\n\r\n    return (\r\n\r\n\r\n            <div className=\"row\">\r\n\r\n                <SideBar/>\r\n\r\n                { categoryTitle === \"\" ? <Categories/> : <Category/> }\r\n                \r\n            </div>\r\n\r\n    );\r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport default HomeScreen;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutAction } from '../../Actions/authActions';\r\nimport { cleanState } from '../../Actions/cleanAction';\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst NavBar = () => \r\n{\r\n\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n////////////////////// LOGOUT //////////////////////\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () =>\r\n    {\r\n        dispatch( cleanState() );\r\n        dispatch( logoutAction() );\r\n    };\r\n\r\n//////////////////////////////////////////////////////\r\n\r\n/******************************************************************************************************* */\r\n\r\n    return (\r\n\r\n        <nav className=\"navbar navbar-light bg-light\">\r\n\r\n            <span className=\"navbar-brand\"><img alt=\"logo\" className=\"logo\" src=\"https://res.cloudinary.com/djlmqpd2n/image/upload/v1608948585/PostMe/logo_sbmxek.png\" /></span>\r\n\r\n            <span className=\"logoutBox\">\r\n\r\n                <div className=\"input-group\">\r\n\r\n                    <input type=\"text\" disabled={ true } className=\"userNameInput form-control\" defaultValue={ name }/>\r\n                    <div className=\"input-group-append\">\r\n                        <button onClick={ handleLogout } className=\"btn btn-dark my-2 my-sm-0\">Logout</button>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </span>\r\n\r\n        </nav>\r\n\r\n    );\r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport default NavBar;\r\n","import { types } from \"../Types/type\";\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst cleanState = () => \r\n{\r\n    localStorage.clear();\r\n    return { type : types.clean }; \r\n};\r\n\r\n     \r\n\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport { cleanState };","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst PrivateRoute = ( { isLoggedIn, component:Component, ...rest } ) => \r\n{\r\n\r\n    return (\r\n\r\n        <Route \r\n        \r\n        { ...rest } \r\n        \r\n        component={ ( props ) => ( ( isLoggedIn ) ? ( <Component {...props} /> ) : ( <Redirect to=\"/login\" /> ) ) } \r\n        \r\n        />\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\nPrivateRoute.protoType = {\r\n\r\n    isLoggedIn : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n\r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst PublicRoute = ( { isLoggedIn, component:Component, ...rest } ) => \r\n{\r\n\r\n    return (\r\n\r\n        <Route \r\n        \r\n            { ...rest } \r\n            \r\n            component={ ( props ) => ( ( !isLoggedIn ) ? ( <Component {...props} /> ) : ( <Redirect to=\"/\" /> ) ) } \r\n            \r\n        />\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\nPublicRoute.protoType = {\r\n\r\n    isLoggedIn : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n\r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport default PublicRoute;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { startLoadCategories } from '../Actions/categoryActions';\r\nimport { startLoadPosts } from '../Actions/postActions';\r\nimport LoginScreen from '../Components/auth/LoginScreen';\r\nimport RegisterScreen from '../Components/auth/RegisterScreen';\r\nimport HomeScreen from '../Components/home/HomeScreen';\r\nimport NavBar from '../Components/ui/NavBar';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst RouterAPP = () => \r\n{   \r\n\r\n////////////////////// CARGA DATA POST //////////////////////\r\n\r\n    const { logged } = useSelector( state => state.auth );\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect( () => \r\n    {\r\n        if( logged )\r\n        {\r\n            dispatch( startLoadPosts() ); \r\n            dispatch( startLoadCategories() );\r\n        };\r\n\r\n    }, [ logged, dispatch ] );\r\n\r\n    \r\n/////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n\r\n//************************************************************************************************************ */\r\n\r\n    return (\r\n\r\n        <Router>\r\n\r\n            <div>\r\n\r\n                { logged && <NavBar/> }\r\n                \r\n                <Switch>\r\n\r\n              \r\n                    <PublicRoute exact path=\"/login\" component={ LoginScreen } isLoggedIn={ logged } />\r\n\r\n                    <PublicRoute exact path=\"/register\" component={ RegisterScreen } isLoggedIn={ logged } />\r\n\r\n                    <PrivateRoute path=\"/\" component={ HomeScreen } isLoggedIn={ logged } />\r\n\r\n                    <Redirect to=\"/login\" />\r\n                  \r\n                  \r\n                </Switch>\r\n\r\n            </div>\r\n\r\n        </Router>\r\n\r\n    );\r\n\r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport default RouterAPP\r\n","import { types } from \"../Types/type\";\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst initialState = \r\n{\r\n    uid : null,\r\n    name : null,\r\n    postsLiked : [],\r\n    logged : false\r\n\r\n};\r\n\r\nconst authReducer = ( state = initialState, action ) =>\r\n{\r\n    switch ( action.type ) \r\n    {\r\n        case types.authLogin : return { ...state, ...action.payload  };\r\n\r\n        case types.authLogout : return { ...state, ...initialState };\r\n\r\n        case types.clean : return { ...state, ...initialState };\r\n        \r\n        default: return state;\r\n    };\r\n    \r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport { authReducer };","import { types } from \"../Types/type\";\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst initialState = \r\n{\r\n    posts : null,\r\n    categories : [],\r\n    activeCategory : { color : \"\", categoryTitle : \"\", categoryId : \"\", user : {} }\r\n};\r\n\r\n\r\nconst postReducer = ( state = initialState, action ) =>\r\n{\r\n    switch( action.type ) \r\n    {\r\n        case types.postLoad : return { ...state, posts : [ ...action.payload ] };\r\n\r\n        case types.postSetActiveCategory : return { ...state, activeCategory : { color : action.payload.color, categoryTitle : action.payload.categoryTitle, categoryId : action.payload._id, user : action.payload.user } };\r\n\r\n        case types.postLoadCategories : return { ...state, categories : [ ...action.payload ] };\r\n\r\n        case types.clean : return { ...state, ...initialState };\r\n        \r\n        default: return state;\r\n    };\r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport { postReducer };","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { postReducer } from \"./postReducer\";\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst rootReducer = combineReducers( \r\n    \r\n    {  \r\n        auth : authReducer,\r\n        post : postReducer\r\n    } \r\n    \r\n);\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport { rootReducer };\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../Reducers/rootReducer\";\r\nimport { loadState, saveState } from \"./saveLoadState\";\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst initialData = loadState() || {};\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst store = createStore(\r\n\r\n    rootReducer,\r\n    initialData,\r\n    composeEnhancers( applyMiddleware( thunk ) )\r\n\r\n);\r\n\r\nstore.subscribe( ()=> saveState( store.getState() ) );\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport { store };","\r\nconst saveState = ( state ) =>\r\n{\r\n    if( !state )\r\n    {\r\n        return undefined;\r\n    };\r\n\r\n    const data = JSON.stringify( state );\r\n\r\n    return localStorage.setItem( \"state\", data );\r\n};\r\n\r\n\r\nconst loadState = () =>\r\n{\r\n    const data =  JSON.parse( localStorage.getItem( \"state\" ) );\r\n\r\n    if( !data )\r\n    {\r\n        return undefined;\r\n    };\r\n\r\n    return data;\r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport { saveState, loadState };\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport RouterAPP from '../Router/RouterAPP';\r\nimport { store } from '../Store/store';\r\nimport \"../Style/PostmeAPP.css\";\r\n\r\n//////<<<<<------------------------------------------------``\r\n\r\nconst PostmeAPP = () => \r\n{\r\n\r\n    return (\r\n\r\n        //--------------------API---------------------//\r\n    ////////////////////// LOAD ROUTER //////////////////////\r\n\r\n         <Provider store={ store }><RouterAPP/></Provider>\r\n\r\n    /////////////////////////////////////////////////////////\r\n\r\n\r\n    );\r\n\r\n};\r\n\r\n//////---------------------------------------------->>>>>\r\n\r\nexport default PostmeAPP;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PostmeAPP from './APP/PostmeAPP';\n\n//////<<<<<------------------------------------------------``\n\n\n\n////////////////////// RENDER APP //////////////////////\n\nconst divRoot = document.getElementById( \"root\" );\n\nReactDOM.render( <PostmeAPP/> ,divRoot );\n\n///////////////////////////////////////////////////////\n\n\n"],"sourceRoot":""}